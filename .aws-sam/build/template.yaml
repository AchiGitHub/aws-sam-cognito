AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'samp-app

  AWS Cognito Authorizer on APIs

  '
Globals:
  Function:
    Timeout: 30
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors: '''*'''
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn:
              Fn::GetAtt:
              - UserPool
              - Arn
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Passenger-Trips
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:DeleteItem
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :table/Passenger-Trips
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: user-pool-test
      Schema:
      - Name: name
        AttributeDataType: String
        Mutable: true
        Required: true
      - Name: email
        AttributeDataType: String
        Mutable: false
        Required: true
      - Name: phone_number
        AttributeDataType: String
        Mutable: false
        Required: true
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: user-pool-client
      GenerateSecret: false
      UserPoolId:
        Ref: UserPool
      AllowedOAuthFlows:
      - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
      - phone
      - email
      - openid
      - profile
      CallbackURLs:
      - http://localhost:3000/authenticated
      DefaultRedirectURI: http://localhost:3000/authenticated
      LogoutURLs:
      - http://localhost:3000/signedout
      SupportedIdentityProviders:
      - COGNITO
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: userpooltestase
      UserPoolId:
        Ref: UserPool
